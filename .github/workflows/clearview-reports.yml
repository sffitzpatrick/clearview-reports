# .github/workflows/monthly-report.yml
name: Monthly Website Report

on:
  schedule:
    - cron: '0 6 1 * *' # Monthly on the 1st at 6AM UTC
  workflow_dispatch:     # Optional: allow manual runs

jobs:
  audit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        site:
          - name: clearview-drupal
            url: https://clearviewlibrary.org
            report_recipient: brad@clearviewlibrary.org
            max_pages: 500
          - name: clearview-communico
            url: https://clearview.libnet.info/events
            report_recipient: brad@clearviewlibrary.org
            max_pages: 500
          - name: clearview-pika
            url: https://pika.clearviewlibrary.org/
            report_recipient: brad@clearviewlibrary.org
            max_pages: 50

    env:
      SITE_NAME: ${{ matrix.site.name }}
      SITE_URL: ${{ matrix.site.url }}
      REPORT_RECIPIENT: ${{ matrix.site.report_recipient }}
      MAX_PAGES: ${{ matrix.site.max_pages }}

    steps:

      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0  # Fetch full history so we can pull and push safely

      - name: Create report folder
        run: |
          mkdir -p docs/reports/

      - name: Set dynamic datestamp
        run: echo "DATESTAMP=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"
      
      - name: create base_dir var
        run: |
          REPORT_DIR="$SITE_NAME-$DATESTAMP"
          echo "REPORT_DIR=$REPORT_DIR" >> "$GITHUB_ENV"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install tools
        run: |
          npm install
          npm ci
          npx playwright install

      
      - name: Run a11y scan
        run: node crawler.js --max_pages=$MAX_PAGES --report_dir=$REPORT_DIR --site_name=$SITE_NAME --start_url=$SITE_URL --datestamp=$DATESTAMP

      - name: Generate a11y reports
        run: node summary-reporter.js --report_dir=$REPORT_DIR --site_name=$SITE_NAME --start_url=$SITE_URL --datestamp=$DATESTAMP
      
      - name: Set metadata output
        id: set-meta
        run: |
          echo "{\"name\":\"${{ matrix.site.name }}\",\"url\":\"${{ matrix.site.url }}\"}" > site.json
          echo "site_info=$(cat site.json)" >> $GITHUB_OUTPUT

  commit-and-push:
    needs: audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Configure Git for GitHub Actions
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Pull latest main
        run: git pull origin main --rebase

      - name: Commit and Push Reports
        run: |
          git add docs
          git commit -m "Add reports for '"$SITE_NAME"' on '"$DATESTAMP"'" || echo "No changes to commit"
          git push
            - name: Send email with SendGrid
      - name: email reports
        run: |
          for dir in reports/*; do
            site=$(basename "$dir" | cut -d'-' -f2)
            echo "Sending email for $site..."
            
            curl --request POST \
              --url https://api.sendgrid.com/v3/mail/send \
              --header "Authorization: Bearer $SENDGRID_API_KEY" \
              --header 'Content-Type: application/json' \
              --data "{
                \"personalizations\": [{
                  \"to\": [{ \"email\": \"sean@proofstudio.co\" }],
                  \"subject\": \"Report for ${site}\"
                }],
                \"from\": { \"email\": \"noreply@proofstudio.co\" },
                \"content\": [{
                  \"type\": \"text/plain\",
                  \"value\": \"The report for ${site} is ready. View the report here: https://sffitzpatrick.github.io/clearview-reports/reports/'"${dir}"'/summary.html""
                }]
              }"
          done
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API }}
          #   env:
          #   SENDGRID_API_KEY: ${{ secrets.SENDGRID_API }}
          # run: |
          #   curl --request POST \
          #     --url https://api.sendgrid.com/v3/mail/send \
          #     --header "Authorization: Bearer $SENDGRID_API_KEY" \
          #     --header 'Content-Type: application/json' \
          #     --data '{
          #       "personalizations": [{
          #         "to": [
          #           { "email": "sean@proofstudio.co" }
          #           ],
          #         "subject": "ðŸ“Š Report for '"$SITE_NAME"' - '"$DATESTAMP"'"
          #       }],
          #       "from": { "email": "noreply@proofstudio.co" },
          #       "content": [{
          #         "type": "text/plain",
          #         "value": "The report for '"$SITE_NAME"' is complete.\n\nReport date: '"$DATESTAMP"'\nSite URL: '"$SITE_URL"'\n\nView the report here: https://sffitzpatrick.github.io/clearview-reports/reports/'"$REPORT_DIR"'/summary.html"
          #       }]
          #     }'
